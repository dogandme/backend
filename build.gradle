plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework:spring-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'com.auth0:java-jwt:4.2.1'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'
	implementation 'javax.mail:mail:1.4.7'
	implementation 'org.springframework:spring-context-support:5.3.9'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'


	//image resizing 을 위한 라이브러리
	implementation 'com.github.downgoon:marvin:1.5.5'
	implementation 'com.github.downgoon:MarvinPlugins:1.5.5'


	// Apache Tika
	implementation 'org.apache.tika:tika-core:2.8.0'
	implementation 'org.apache.tika:tika-parsers:2.8.0'

	// validated 사용을 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// 쿼리로그 남기기
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	// JSR-305 관련 의존성 추가 (javax.annotation 관련 경고 해결)
	implementation 'com.google.code.findbugs:jsr305:3.0.2'


	//GeoLite2
	implementation group: 'com.maxmind.geoip2', name: 'geoip2', version: '4.0.1'

	// queryDsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	// 서버 코드 변경시 자동으로 ReStart
	compileOnly('org.springframework.boot:spring-boot-devtools')

	// Health check를 위한 Actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'


// java source set 에 QClass 위치 추가
sourceSets {
	main {
		java {
			srcDirs += generated
		}
	}
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
	options.annotationProcessorPath = configurations.annotationProcessor
}